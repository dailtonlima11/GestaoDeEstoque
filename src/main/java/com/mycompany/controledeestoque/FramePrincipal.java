/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.mycompany.controledeestoque;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;
/**
 *
 * @author pedro
 */
public class FramePrincipal extends javax.swing.JFrame {
    
    public static String cargoUsuarioLogado = "";
    

    /** Creates new form Login */
    public FramePrincipal() {
        initComponents();
        ImageIcon iconePrincipal = new ImageIcon(getClass().getResource("/imagens/iconePrincipal.png"));
        setIconImage(iconePrincipal.getImage());
        
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelLogin = new javax.swing.JPanel();
        campoUsuario = new javax.swing.JTextField();
        tituloUsuario = new javax.swing.JLabel();
        tituloEstoque = new javax.swing.JLabel();
        campoSenha = new javax.swing.JPasswordField();
        tituloSenha = new javax.swing.JLabel();
        btnEntrar = new javax.swing.JButton();
        MenuPrincipal = new javax.swing.JMenuBar();
        MenuSair = new javax.swing.JMenu();
        MenuProdutos = new javax.swing.JMenu();
        menuConsultaEstoque = new javax.swing.JMenuItem();
        MenuCadastroProdutos = new javax.swing.JMenuItem();
        MenuEntradasSaidas = new javax.swing.JMenuItem();
        MenuRelatorios = new javax.swing.JMenu();
        MenuGerarRelatorios = new javax.swing.JMenuItem();
        MenuGestao = new javax.swing.JMenu();
        MenuCadastroFuncionarios = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Estoque");
        setIconImages(null);
        setName("framePrincipal"); // NOI18N
        setResizable(false);

        painelLogin.setBackground(new java.awt.Color(255, 255, 255));
        painelLogin.setPreferredSize(new java.awt.Dimension(854, 480));

        campoUsuario.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        campoUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoUsuarioActionPerformed(evt);
            }
        });

        tituloUsuario.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tituloUsuario.setText("Usuario");

        tituloEstoque.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        tituloEstoque.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloEstoque.setText("Sistema de Estoque");

        campoSenha.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        campoSenha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apertarEnter(evt);
            }
        });

        tituloSenha.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tituloSenha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloSenha.setText("Senha");

        btnEntrar.setBackground(new java.awt.Color(224, 239, 255));
        btnEntrar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnEntrar.setForeground(new java.awt.Color(0, 0, 0));
        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelLoginLayout = new javax.swing.GroupLayout(painelLogin);
        painelLogin.setLayout(painelLoginLayout);
        painelLoginLayout.setHorizontalGroup(
            painelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLoginLayout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addGroup(painelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnEntrar)
                        .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tituloEstoque))
                    .addComponent(tituloSenha)
                    .addComponent(tituloUsuario))
                .addGap(339, 339, 339))
        );
        painelLoginLayout.setVerticalGroup(
            painelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLoginLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(tituloEstoque)
                .addGap(29, 29, 29)
                .addComponent(tituloUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tituloSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEntrar)
                .addGap(133, 133, 133))
        );

        MenuPrincipal.setBorder(null);
        MenuPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MenuPrincipal.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        MenuPrincipal.setRequestFocusEnabled(false);

        MenuSair.setText("Sair");
        MenuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuSairMouseClicked(evt);
            }
        });
        MenuPrincipal.add(MenuSair);

        MenuProdutos.setText("Produtos");

        menuConsultaEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeConsultaEstoque.png"))); // NOI18N
        menuConsultaEstoque.setText("Consulta de Estoque");
        menuConsultaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConsultaEstoqueActionPerformed(evt);
            }
        });
        MenuProdutos.add(menuConsultaEstoque);

        MenuCadastroProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeGestaoProdutos.png"))); // NOI18N
        MenuCadastroProdutos.setLabel("Gestão de Produtos");
        MenuCadastroProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastroProdutosActionPerformed(evt);
            }
        });
        MenuProdutos.add(MenuCadastroProdutos);

        MenuEntradasSaidas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeEntradasSaidas.png"))); // NOI18N
        MenuEntradasSaidas.setText("Registro de Entradas e Saídas");
        MenuEntradasSaidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEntradasSaidasActionPerformed(evt);
            }
        });
        MenuProdutos.add(MenuEntradasSaidas);

        MenuPrincipal.add(MenuProdutos);

        MenuRelatorios.setText("Relatórios");

        MenuGerarRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeRelatorios.png"))); // NOI18N
        MenuGerarRelatorios.setText("Gerar Relatórios");
        MenuGerarRelatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuGerarRelatoriosActionPerformed(evt);
            }
        });
        MenuRelatorios.add(MenuGerarRelatorios);

        MenuPrincipal.add(MenuRelatorios);

        MenuGestao.setText("Gestão");

        MenuCadastroFuncionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeFuncionarios.png"))); // NOI18N
        MenuCadastroFuncionarios.setText("Gestão de Funcionários");
        MenuCadastroFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastroFuncionariosActionPerformed(evt);
            }
        });
        MenuGestao.add(MenuCadastroFuncionarios);

        MenuPrincipal.add(MenuGestao);

        setJMenuBar(MenuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
    Logar();
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void campoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoUsuarioActionPerformed

    }//GEN-LAST:event_campoUsuarioActionPerformed

    private void MenuCadastroProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastroProdutosActionPerformed
        if("Gerente".equals(cargoUsuarioLogado) || "Estoquista".equals(cargoUsuarioLogado)){
            GestaoProdutos gestaoProdutos = new GestaoProdutos();
            getContentPane().removeAll(); setContentPane(gestaoProdutos); revalidate(); repaint();   
        } else{
            JOptionPane.showMessageDialog(null, "Você não tem permissão para acessar essa página.", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
        }
         
    }//GEN-LAST:event_MenuCadastroProdutosActionPerformed

    private void MenuEntradasSaidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEntradasSaidasActionPerformed
        if("Gerente".equals(cargoUsuarioLogado) || "Estoquista".equals(cargoUsuarioLogado)){
            EntradaESaida entradaSaida = new EntradaESaida();
            getContentPane().removeAll(); setContentPane(entradaSaida); revalidate(); repaint();   
        } else{
            JOptionPane.showMessageDialog(null, "Você não tem permissão para acessar essa página.", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_MenuEntradasSaidasActionPerformed

    private void MenuGerarRelatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuGerarRelatoriosActionPerformed
        if("Gerente".equals(cargoUsuarioLogado)){
            Relatorios relatorios = new Relatorios();
            getContentPane().removeAll(); setContentPane(relatorios); revalidate(); repaint();
            
        } else{
            JOptionPane.showMessageDialog(null, "Você não tem permissão para acessar essa página.", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
        }
        
            // TODO add your handling code here:
    }//GEN-LAST:event_MenuGerarRelatoriosActionPerformed

    private void MenuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSairMouseClicked
        
        if("".equals(cargoUsuarioLogado)){
            JOptionPane.showMessageDialog(null, "Você não está logado.", "Erro", JOptionPane.ERROR_MESSAGE);
        } else{
            int opcao = JOptionPane.showOptionDialog(
                    this,
                    "Tem certeza que deseja sair?",
                    "Confirmação de Saída",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, // ícone padrão
                    new Object[] {"Sim", "Não"}, // opções personalizadas
                    "Não" // opção padrão
                );
                
        if (opcao == JOptionPane.YES_OPTION) {
                    cargoUsuarioLogado = "";
                    campoUsuario.setText("");
                    campoSenha.setText("");
                    getContentPane().removeAll();
                    initComponents();
                    ImageIcon iconePrincipal = new ImageIcon(getClass().getResource("/imagens/iconePrincipal.png"));
                    setIconImage(iconePrincipal.getImage());
                    revalidate(); repaint();
                    
                }
        }
        
        
               // TODO add your handling code here:
    }//GEN-LAST:event_MenuSairMouseClicked
    
    private void MenuCadastroFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastroFuncionariosActionPerformed
        if("Gerente".equals(cargoUsuarioLogado)){
            GestaoFuncionarios gestaoFuncionarios = new GestaoFuncionarios();
            getContentPane().removeAll(); setContentPane(gestaoFuncionarios); revalidate(); repaint();
        } else{
            JOptionPane.showMessageDialog(null, "Você não tem permissão para acessar essa página.", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
        }
        
            // TODO add your handling code here:
    }//GEN-LAST:event_MenuCadastroFuncionariosActionPerformed

    private void apertarEnter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apertarEnter
        Logar();        // TODO add your handling code here:
    }//GEN-LAST:event_apertarEnter

    private void menuConsultaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConsultaEstoqueActionPerformed
        if (!"".equals(cargoUsuarioLogado)){
             ConsultaDeEstoque consultadeEstoque = new ConsultaDeEstoque();
            getContentPane().removeAll(); setContentPane(consultadeEstoque); revalidate(); repaint();
        } else{
            JOptionPane.showMessageDialog(null, "Você não tem permissão para acessar essa página.", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_menuConsultaEstoqueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FramePrincipal().setVisible(true);
        });
    }
    
    private void Logar(){
    String usuario = campoUsuario.getText();
    String senha = campoSenha.getText();
    String cargo = "";

    if (usuario.isEmpty() || senha.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Digite usuário e senha!", "FALHA NO ACESSO", JOptionPane.WARNING_MESSAGE);
    } else {
        if("admin".equals(usuario) && "1234".equals(senha)){
            JOptionPane.showMessageDialog(null, "Usuário e senha OK!", "Acesso Permitido", JOptionPane.INFORMATION_MESSAGE);
            cargoUsuarioLogado = "Gerente";
            GestaoFuncionarios gestaoFuncionarios = new GestaoFuncionarios();
            getContentPane().removeAll(); setContentPane(gestaoFuncionarios); revalidate(); repaint();
            
                } else{
                    
            try {
            // Conectando ao banco
            Connection conn = ConexaoBD.conectar();

            // Query para buscar usuário
            String sql = "SELECT * FROM Funcionarios WHERE Login = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, usuario);

            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
            String hashArmazenado = rs.getString("Senha");
            if (BCrypt.checkpw(senha, hashArmazenado)) {
                // Login bem-sucedido
                JOptionPane.showMessageDialog(null, "Usuário e senha OK!", "Acesso Permitido", JOptionPane.INFORMATION_MESSAGE);
                
                cargoUsuarioLogado = rs.getString("Cargo");  // <- AQUI!!!
                System.out.println("Cargo do usuário logado: " + cargoUsuarioLogado);

                switch (cargoUsuarioLogado){
                    case "Gerente": 
                        GestaoFuncionarios gestaoFuncionarios = new GestaoFuncionarios();
                        getContentPane().removeAll(); setContentPane(gestaoFuncionarios); revalidate(); repaint();
                        break;
                        
                    case "Estoquista":
                        GestaoProdutos gestaoProdutos = new GestaoProdutos();
                        getContentPane().removeAll(); setContentPane(gestaoProdutos); revalidate(); repaint();
                        break;
                        
                    case "Atendente":
                        ConsultaDeEstoque consultadeEstoque = new ConsultaDeEstoque();
                        getContentPane().removeAll(); setContentPane(consultadeEstoque); revalidate(); repaint();
                        break;
                }
            } else{
                JOptionPane.showMessageDialog(null, "Usuário ou senha incorretos!", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
            }
                
            } else {
                // Falha no login
                JOptionPane.showMessageDialog(null, "Usuário ou senha incorretos!", "Acesso não permitido", JOptionPane.ERROR_MESSAGE);
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar ao banco: " + ex.getMessage());
        }
                }
                
        
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuCadastroFuncionarios;
    private javax.swing.JMenuItem MenuCadastroProdutos;
    private javax.swing.JMenuItem MenuEntradasSaidas;
    private javax.swing.JMenuItem MenuGerarRelatorios;
    private javax.swing.JMenu MenuGestao;
    private javax.swing.JMenuBar MenuPrincipal;
    private javax.swing.JMenu MenuProdutos;
    private javax.swing.JMenu MenuRelatorios;
    private javax.swing.JMenu MenuSair;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JMenuItem menuConsultaEstoque;
    private javax.swing.JPanel painelLogin;
    private javax.swing.JLabel tituloEstoque;
    private javax.swing.JLabel tituloSenha;
    private javax.swing.JLabel tituloUsuario;
    // End of variables declaration//GEN-END:variables
    
}
